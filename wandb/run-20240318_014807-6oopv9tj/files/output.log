
Starting trainig
Not found pretrained weights. Continue without any pretrained weights.
Training Data Size : 50400
Validation Data Size : 5600
xf shape  torch.Size([4, 3, 256, 256])
/opt/conda/lib/python3.7/site-packages/torch/nn/functional.py:3063: UserWarning: Default upsampling behavior when mode=bilinear is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.
  "See the documentation of nn.Upsample for details.".format(mode))
/opt/conda/lib/python3.7/site-packages/torch/nn/functional.py:2952: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")
epoch: 0    0 / 12600
lossD: 3.5153632164001465    lossG: 91.99238586425781 batch_time: 2.3479883670806885s
L_adv: 2.6951959133148193 L_id: 1.0266749858856201 L_attr: 3.917664051055908 L_rec: 0.48629888892173767
L_l2_eyes: 0.00770139042288065
L_landmarks: 0.0036690635606646538
loss_adv_accumulated: 19.6539039182663
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
epoch: 0    10 / 12600
lossD: 2.978132724761963    lossG: 80.39456176757812 batch_time: 2.2043204307556152s
L_adv: 4.535217761993408 L_id: 1.0074985027313232 L_attr: 3.7822251319885254 L_rec: 0.0
L_l2_eyes: 0.0023350894916802645
L_landmarks: 0.0015252948505803943
loss_adv_accumulated: 16.94416488312338
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
epoch: 0    20 / 12600
lossD: 2.37520170211792    lossG: 63.44989776611328 batch_time: 2.195160388946533s
L_adv: 4.599160671234131 L_id: 0.9769474267959595 L_attr: 2.0963470935821533 L_rec: 0.15296964347362518
L_l2_eyes: 0.008316317573189735
L_landmarks: 0.003932322841137648
loss_adv_accumulated: 14.546315454456236
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
epoch: 0    30 / 12600
lossD: 3.8490281105041504    lossG: 53.43301773071289 batch_time: 2.2084155082702637s
L_adv: 3.1587421894073486 L_id: 1.0048917531967163 L_attr: 1.2645883560180664 L_rec: 0.0708884745836258
L_l2_eyes: 0.0007672666688449681
L_landmarks: 0.0015316058415919542
loss_adv_accumulated: 12.569762206688276
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])

xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
epoch: 0    40 / 12600
lossD: 2.952075481414795    lossG: 45.33949279785156 batch_time: 2.239988327026367s
L_adv: 2.7405076026916504 L_id: 0.9411023855209351 L_attr: 0.9949927926063538 L_rec: 0.0
L_l2_eyes: 0.0008136020042002201
L_landmarks: 0.001491882256232202
loss_adv_accumulated: 10.918969886750391
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
epoch: 0    50 / 12600
lossD: 3.3475914001464844    lossG: 53.4719123840332 batch_time: 2.2440900802612305s
L_adv: 4.973668098449707 L_id: 1.037473201751709 L_attr: 0.8356001973152161 L_rec: 0.0
L_l2_eyes: 0.0012471972731873393
L_landmarks: 0.001081920345313847
loss_adv_accumulated: 9.564747469468228
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
epoch: 0    60 / 12600
lossD: 3.6115598678588867    lossG: 46.73931884765625 batch_time: 2.2331743240356445s
L_adv: 4.786108493804932 L_id: 0.9999202489852905 L_attr: 0.9428637623786926 L_rec: 0.07045155763626099
L_l2_eyes: 0.0014548366889357567
L_landmarks: 0.0010208168532699347
loss_adv_accumulated: 8.486624577034394
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
xf shape  torch.Size([4, 3, 256, 256])
Traceback (most recent call last):
  File "train.py", line 653, in <module>
    main(args)
  File "train.py", line 529, in main
    train(args, device=device)
  File "train.py", line 396, in train
    loss_adv_accumulated)
  File "train.py", line 87, in train_one_epoch
    id_embedding, src_id_emb, tgt_id_emb = id_extractor(id_ext_src_input, id_ext_tgt_input)
  File "/opt/conda/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/opt/conda/lib/python3.7/site-packages/torch/autograd/grad_mode.py", line 26, in decorate_context
    return func(*args, **kwargs)
  File "/workspace/extractor/SA_idextractor.py", line 61, in forward
    v_id_target = F.normalize(self.f_id(F.interpolate((i_target - 0.5)/0.5, size=112, mode='bilinear')), dim=-1, p=2).to(self.device)
  File "/opt/conda/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/workspace/extractor/arcface_model/iresnet.py", line 146, in forward
    x = self.layer2(x)
  File "/opt/conda/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/opt/conda/lib/python3.7/site-packages/torch/nn/modules/container.py", line 117, in forward
    input = module(input)
  File "/opt/conda/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/workspace/extractor/arcface_model/iresnet.py", line 49, in forward
    out = self.conv1(out)
  File "/opt/conda/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/opt/conda/lib/python3.7/site-packages/torch/nn/modules/conv.py", line 423, in forward
    return self._conv_forward(input, self.weight)
  File "/opt/conda/lib/python3.7/site-packages/torch/nn/modules/conv.py", line 420, in _conv_forward
    self.padding, self.dilation, self.groups)
KeyboardInterrupt